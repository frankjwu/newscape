extends maplayout

block content
  div(id="map-canvas")

  script.
    function initialize(tweets) {
      console.log(tweets);

      var mapOptions = {
        center: new google.maps.LatLng(41.3, -72.9),
        zoom: 8,
        mapTypeId: google.maps.MapTypeId.ROADMAP
      };

      var map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

      var minstyle = [
        {
          "featureType": "road",
          "elementType": "geometry",
          "stylers": [
            { "color": "#4d8080" },
            { "visibility": "off" }
          ]
        },{
          "featureType": "road",
          "elementType": "labels",
          "stylers": [
            { "visibility": "off" }
          ]
        },{
          "featureType": "landscape",
          "stylers": [
            { "visibility": "off" }
          ]
        },{
          "featureType": "transit",
          "stylers": [
            { "visibility": "off" }
          ]
        },{
          "featureType": "poi",
          "stylers": [
            { "visibility": "off" }
          ]
        },{
          "featureType": "administrative",
          "stylers": [
            { "lightness": 10 },
            { "gamma": 1.9 },
            { "visibility": "on" }
          ]
        }
      ];
      map.setOptions({styles: minstyle});

      var newsMap = {};
      newsMap['Poopertrator'] = {
        center: new google.maps.LatLng(41.3, -72.9),
        radius: 30000,
        title: 'Poopertrator',
        blurb: '<div id="content">'+
          '<div id="siteNotice">'+
          '</div>'+
          '<h1 id="firstHeading" class="firstHeading">Poopetrator</h1>'+
          '<div id="bodyContent">'+
          '<p><b>Poopetrator</b>, also referred to as <b>Poopgate</b>, is a ' +
          'very contentious event in Yale\'s recent history. </p>'+
          '<p>Attribution: <a href="http://www.yahoo.com">Yahoo</a></p>'+
          '</div>'+
          '</div>',
      };
      newsMap['Poopgate'] = {
        center: new google.maps.LatLng(42.3, -72.9),
        radius: 6000,
        title: 'Poopgate',
        blurb: '<div id="content">'+
          '<div id="siteNotice">'+
          '</div>'+
          '<h1 id="firstHeading" class="firstHeading">Poopgate</h1>'+
          '<div id="bodyContent">'+
          '<p><b>Poopgate</b>, also referred to as <b>the Poopetrator Incident</b>, '+
          'is a very contentious event in Yale\'s recent history. </p>'+
          '<p>Attribution: <a href="http://www.yahoo.com">Yahoo</a></p>'+
          '</div>'+
          '</div>',
      };
      newsMap['CHARLESJIN'] = {
        center: new google.maps.LatLng(41.3, -73.9),
        radius: 7000,
        title: 'CHARLESJIN',
        blurb: '<div id="content">'+
          '<div id="siteNotice">'+
          '</div>'+
          '<h1 id="firstHeading" class="firstHeading">CHARLESJIN</h1>'+
          '<div id="bodyContent">'+
          '<p><b>Charles Jin</b>, is so fucking cool' +
          '<p>Attribution: <a href="http://www.yahoo.com">Yahoo</a></p>'+
          '</div>'+
          '</div>',
      };

      var maxRadius;
      for (var newsItem in newsMap){
        maxRadius = (maxRadius > newsMap[newsItem].radius) ? maxRadius : newsMap[newsItem].radius;
      }

      var rainbow = new Rainbow();
      var infowindow = new google.maps.InfoWindow();
      rainbow.setNumberRange(0, maxRadius);

      // Construct the circle for each newsitem
      for (var newsItem in newsMap) {
        var hex = '#' + rainbow.colourAt(newsMap[newsItem].radius);
        var circleOptions = {
          strokeColor: hex,
          strokeOpacity: 1,
          strokeWeight: 3,
          fillColor: hex,
          fillOpacity: 0.6*newsMap[newsItem].radius/maxRadius,
          map: map,
          center: newsMap[newsItem].center,
          radius: newsMap[newsItem].radius,
        };
        newsCircle = new google.maps.Circle(circleOptions);
        createMarker(newsMap[newsItem].center, newsMap[newsItem].title, newsMap[newsItem].blurb, '#' + rainbow.colourAt(newsMap[newsItem].radius));
      };

      len = tweets.length-1;
      geocoder = new google.maps.Geocoder();
      for (var loc in tweets[len]){
      geocoder.geocode({ 'address': tweets[len][loc] }, function(results, status){  
      //    alert("hi");
        if (status == google.maps.GeocoderStatus.OK) {          
          var marker  = new google.maps.Marker({
          map: map, 
          position: results[0].geometry.location,
          title:'test',
          });
        }
      })
      }
      

      //- function codeAddress() {
      //-   geocoder.geocode( { 'address': this}, function(results, status) {
      //-     if (status == google.maps.GeocoderStatus.OK) {
      //-       var marker = new google.maps.Marker({
      //-           map: map,
      //-           position: results[0].geometry.location,
      //-       });
      //-     }
      //-   }
      //- });

      function createMarker(newsCenter, newsTitle, newsBlurb, pinColor){
        var pinImage = new google.maps.MarkerImage(
            new google.maps.Size(0,0),
            new google.maps.Point(0,0),
            new google.maps.Point(0,0));
        var marker = new google.maps.Marker({
          position: newsMap[newsItem].center,
          map: map,
          title: newsTitle,
          icon: pinImage,
        });
        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(newsBlurb);
          infowindow.open(map,marker);
        });
        google.maps.event.addListener(newsCircle, 'click', function() {
          infowindow.setContent(newsBlurb);
          infowindow.open(map,marker);
        });
      }

    }
    var json = !{json}
    google.maps.event.addDomListener(window, 'load', initialize(json));
